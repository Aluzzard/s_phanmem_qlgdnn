<?php
bolt_decrypt( __FILE__ , 'heT5TN'); return 0;
##!!!##